{"version":3,"sources":["./src/app/notificacoes/notificacoes.page.html","./src/app/notificacoes/notificacoes.module.ts","./src/app/notificacoes/notificacoes.page.scss","./src/app/notificacoes/notificacoes.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,oVAAqR,aAAa,0BAA0B,aAAa,sBAAsB,cAAc,ogC;;;;;;;;;;;;;;;;;;;;;;ACAnV;AACM;AACF;AACU;AAEV;AAEU;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC5B;CACF,CAAC;AAWF,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;CAAG;AAAzB,sBAAsB;IATlC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,mEAAgB,CAAC;KACjC,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;ACzBnC;AAAe,6GAA8C,uJ;;;;;;;;;;;;;;;;;;;;;ACAH;AACZ;AACkB;AACP;AACtB;AAMnC,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAI3B,YAAoB,MAAc,EAAU,IAAU,EAAU,IAAY,EAAS,OAAsB,EAClG,YAA4B,EAAS,SAA0B;QADpD,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAM;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAe;QAClG,iBAAY,GAAZ,YAAY,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAiB;QAJnE,iBAAY,GAAG,EAAE;IAOpB,CAAC;IAEH,QAAQ;IACR,CAAC;IAGK,gBAAgB;;YACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;gBACjB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC/D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,8CAAM,EAAE,CAAC,cAAc,GAAG,uBAAuB,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;oBACvG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC3C,CAAC,CAAC;YACJ,CAAC,CAAC;QACJ,CAAC;KAAA;IAGD,cAAc,CAAC,MAAM;QAElB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAS,EAAE,CAAC;YACxB,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC7C,CAAC,EAAC,CAAC;IAGP,CAAC;CAED;;YA7B6B,sDAAM;YAAgB,2DAAI;YAAgB,oDAAM;YAAkB,4DAAa;YACpF,8DAAc;YAAoB,8DAAe;;AAL7D,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,8NAAuC;;KAExC,CAAC;2EAK4B,sDAAM,EAAgB,2DAAI,EAAgB,oDAAM,EAAkB,4DAAa;QACpF,8DAAc,EAAoB,8DAAe;GAL7D,gBAAgB,CAiC5B;AAjC4B","file":"notificacoes-notificacoes-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar mode='ios'>\\n    <ion-title>Notificações</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n\\n\\n  <div *ngFor='let noty of notificacoes'>\\n\\n\\n    <ion-card>\\n      <ion-card-header>\\n        <ion-label>\\n          <h3><b>{{ noty.nome }}</b></h3>\\n          <p>{{ noty.data }}</p>\\n          <h3>{{ noty.texto }}</h3>\\n        </ion-label>\\n      </ion-card-header>\\n    </ion-card>\\n\\n\\n  </div>\\n\\n\\n</ion-content>\\n\\n<ion-toolbar>\\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"bottom\\\">\\n      <ion-tab-button tab=\\\"tab-schedule\\\" (click)=\\\"routerlink_api('/home')\\\">\\n        <ion-icon name=\\\"home\\\"></ion-icon>\\n        <ion-label>Início</ion-label>\\n      </ion-tab-button>\\n    \\n      <ion-tab-button tab=\\\"tab-cart\\\" (click)=\\\"routerlink_api('/notificacoes')\\\">\\n        <ion-icon name=\\\"notifications\\\" color='warning'></ion-icon>\\n        <ion-label>Notificações</ion-label>\\n      </ion-tab-button>\\n\\n      <ion-tab-button tab=\\\"tab-cart\\\" (click)=\\\"routerlink_api('/pedidos')\\\">\\n        <ion-icon name=\\\"cart\\\"></ion-icon>\\n        <ion-label>Pedidos</ion-label>\\n      </ion-tab-button>\\n  \\n      <ion-tab-button tab=\\\"tab-person\\\" (click)=\\\"routerlink_api('/conta')\\\">\\n        <ion-icon name=\\\"list\\\"></ion-icon>\\n        <ion-label>Mais</ion-label>\\n      </ion-tab-button>\\n    </ion-tab-bar>\\n  </ion-tabs>\\n</ion-toolbar>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificacoesPage } from './notificacoes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificacoesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NotificacoesPage]\n})\nexport class NotificacoesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhY29lcy9ub3RpZmljYWNvZXMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { NavController, AlertController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Config } from \"../config\";\n@Component({\n  selector: 'app-notificacoes',\n  templateUrl: './notificacoes.page.html',\n  styleUrls: ['./notificacoes.page.scss'],\n})\nexport class NotificacoesPage implements OnInit {\npublic notificacoes = []\n\n\n  constructor(private router: Router, private http: HTTP, private zone: NgZone, public navCtrl: NavController,\n    public activerouter: ActivatedRoute, public alertCtrl: AlertController) {\n      \n\n    }\n\n  ngOnInit() {\n  }\n\n\n  async ionViewWillEnter() {\n    this.zone.run(() => {\n      const dataz = JSON.parse(localStorage.getItem('cliente_data'));\n      this.http.get(new Config().local_link_api + '/api/notificacoes?id=' + dataz['id'], [], {}).then((data) => {\n        this.notificacoes = JSON.parse(data.data)\n      })\n    })\n  }\n\n\n  routerlink_api(string){\n    \n     this.zone.run(async () => {\n       await this.navCtrl.navigateForward(string);\n     });\n    \n   \n }\n\n}\n"],"sourceRoot":"webpack:///"}