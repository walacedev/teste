{"version":3,"sources":["./src/app/conta/conta.page.html","./src/app/conta/conta.module.ts","./src/app/conta/conta.page.scss","./src/app/conta/conta.page.ts"],"names":[],"mappings":"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","file":"conta-conta-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar mode='ios'> \\n    <ion-title>Mais</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen class=\\\"ion-padding\\\">\\n  \\n  <ion-list *ngIf=\\\"logado == true\\\">\\n    <ion-item (click)='routerlink_api(\\\"/minha-conta\\\")'>\\n      <ion-icon slot=\\\"end\\\" name=\\\"md-contact\\\" class=\\\"ion-icon\\\"></ion-icon>\\n      <ion-label><h2>Minha conta</h2></ion-label>\\n    </ion-item>\\n\\n    <ion-item (click)='routerlink_api(\\\"/enderecos\\\")'>\\n      <ion-icon slot=\\\"end\\\" name=\\\"md-home\\\" class=\\\"ion-icon\\\"></ion-icon>\\n      <ion-label><h2>Endereços de entrega</h2></ion-label>\\n    </ion-item>\\n\\n    <ion-item (click)='share()'>\\n      <ion-icon slot=\\\"end\\\" name=\\\"md-share\\\" class=\\\"ion-icon\\\"></ion-icon>\\n      <ion-label><h2>Compartilhar nosso App</h2></ion-label>\\n    </ion-item>\\n\\n    <ion-item (click)='routerlink_api(\\\"/pedido-info\\\")'>\\n      <ion-icon slot=\\\"end\\\" name=\\\"md-happy\\\" class=\\\"ion-icon\\\"></ion-icon>\\n      <ion-label><h2>Sugestões e reclamações</h2></ion-label>\\n    </ion-item>\\n\\n\\n    <div *ngIf='status == true'>\\n      <ion-item *ngIf='admin == true && myaccount.de != 1'>\\n        <ion-label><h2>Restaurante (ABERTO)</h2></ion-label>\\n        <ion-toggle (ionChange)='statuschange(\\\"OFF\\\")' [(ngModel)]=\\\"status\\\" color='warning' slot=\\\"end\\\" checked></ion-toggle>\\n      </ion-item>\\n    </div>\\n    <div *ngIf='status == false'>\\n      <ion-item *ngIf='admin == true && myaccount.de != 1'>\\n        <ion-label><h2>Restaurante (FECHADO)</h2></ion-label>\\n        <ion-toggle (ionChange)='statuschange(\\\"ON\\\")' [(ngModel)]=\\\"status\\\" color='warning' slot=\\\"end\\\"></ion-toggle>\\n      </ion-item>\\n    </div>\\n    \\n\\n    <br>\\n    <br>\\n    <ion-item (click)='sair()'>\\n      <ion-icon slot=\\\"end\\\" name=\\\"md-log-out\\\" class=\\\"ion-icon\\\"></ion-icon>\\n      <ion-label><h2>Sair</h2></ion-label>\\n    </ion-item>\\n  </ion-list>\\n\\n\\n\\n  <ion-list *ngIf=\\\"logado == false\\\">\\n    <ion-item (click)='routerlink_api(\\\"/minha-conta\\\")'>\\n      <ion-icon slot=\\\"end\\\" name=\\\"md-contact\\\" class=\\\"ion-icon\\\"></ion-icon>\\n      <ion-label><h2>Fazer Login</h2></ion-label>\\n    </ion-item>\\n\\n    <ion-item (click)='routerlink_api(\\\"/pedido-info\\\")' >\\n      <ion-icon slot=\\\"end\\\" name=\\\"md-happy\\\" class=\\\"ion-icon\\\"></ion-icon>\\n      <ion-label><h2>Sugestões e reclamações</h2></ion-label>\\n    </ion-item>\\n\\n    <ion-item (click)='share()'>\\n      <ion-icon slot=\\\"end\\\" name=\\\"md-share\\\" class=\\\"ion-icon\\\"></ion-icon>\\n      <ion-label><h2>Compartilhar nosso app</h2></ion-label>\\n    </ion-item>\\n  </ion-list>\\n\\n\\n\\n</ion-content>\\n\\n\\n\\n \\n    <ion-tab-bar slot=\\\"bottom\\\">\\n      <ion-tab-button tab=\\\"tab-schedule\\\" (click)=\\\"routerlink_api('/home')\\\">\\n        <ion-icon name=\\\"home\\\"></ion-icon>\\n        <ion-label>Início</ion-label>\\n      </ion-tab-button>\\n    \\n      <ion-tab-button tab=\\\"tab-cart\\\" (click)=\\\"routerlink_api('/notificacoes')\\\">\\n        <ion-icon name=\\\"notifications\\\"></ion-icon>\\n        <ion-label>Notificações</ion-label>\\n      </ion-tab-button>\\n\\n      <ion-tab-button tab=\\\"tab-cart\\\" (click)=\\\"routerlink_api('/pedidos')\\\">\\n        <ion-icon name=\\\"cart\\\"></ion-icon>\\n        <ion-label>Pedidos</ion-label>\\n      </ion-tab-button>\\n  \\n      <ion-tab-button tab=\\\"tab-person\\\" (click)=\\\"routerlink_api('/conta')\\\">\\n        <ion-icon name=\\\"list\\\" color='warning'></ion-icon>\\n        <ion-label>Mais</ion-label>\\n      </ion-tab-button>\\n    </ion-tab-bar>\\n\\n\\n<style>\\n.ion-icon {\\n    color: #f3900d\\n  }\\n\\n  h2{\\n    color: gray\\n  }\\n</style>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ContaPage } from './conta.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ContaPage]\n})\nexport class ContaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhL2NvbnRhLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { NavController, AlertController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { Config } from \"../config\";\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\n@Component({\n  selector: 'app-conta',\n  templateUrl: './conta.page.html',\n  styleUrls: ['./conta.page.scss'],\n})\nexport class ContaPage implements OnInit {\n  public logado = false\n  public myaccount;\n  public de = \"\";\n  public admin = false;\n  public restaurantes = [];\n  public status = false;\n  public email_sugestao = new Config().email_sugestao\n\n  constructor(private http: HTTP, private zone: NgZone, public navCtrl: NavController,\n    public activerouter: ActivatedRoute, public alertCtrl: AlertController, public socialSharing: SocialSharing) {\n    const data = JSON.parse(localStorage.getItem('cliente_data'));\n    const datauser = JSON.parse(localStorage.getItem('cliente_data'));\n\n  \n\n    //this.alert_erro('Ops :(', 'Falta uma informação', '' + data);\n    if (data == null) {\n      this.logado = false;\n    } else {\n\n      this.myaccount = datauser\n      \n      this.http.get(new Config().local_link_api + '/api/restaurante?id='+this.myaccount['restaurante'], {}, {}).then((data) => {\n        this.restaurantes = JSON.parse(data.data);\n        if (JSON.parse(data.data)[0]['status'] != \"ABERTO\") {\n          this.status = false;\n        }else{\n          this.status = true \n        }\n    \n        }).catch((err) => {\n          //this.alert_erro(\"erro\", \"\", err)\n        });\n        \n\n      if (this.myaccount['de'] == null || this.myaccount['de'] == \"\") {\n        this.admin = false;\n      } else {\n        this.admin = true\n      }\n      this.logado = true;\n    }\n  }\n\n  share(){\n    this.http.get(new Config().local_link_api + '/api/config', {}, {}).then((data) => {\n      JSON.parse(data.data).forEach(e => {\n        if (e['nome'] == \"share-android\") {\n          this.socialSharing.share(e['valor'].split(\"{linha}\").join('\\n'))\n        }\n      });\n    })\n    \n  }\n\n  statuschange(stats){\n    if (stats == \"ON\") {\n      this.http.get(new Config().local_link_api + '/api/status?status=ABERTO&id=' + this.myaccount['restaurante'], {}, {}).then((data) => {\n      })\n    }else{\n      this.http.get(new Config().local_link_api + '/api/status?status=FECHADO&id=' + this.myaccount['restaurante'], {}, {}).then((data) => {\n      })\n    }\n  }\n\n  sendmail(){\n    window.open('mailto:' + this.email_sugestao, '_system');\n  }\n  ngOnInit() {\n\n\n  }\n\n\n  async alert_erro(header, subheader, message) {\n    const alert = await this.alertCtrl.create({\n      header: header,\n      subHeader: subheader,\n      message: message,\n      buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  sair() {\n    this.logado = false\n    localStorage.removeItem('cliente_data');\n    this.navCtrl.navigateRoot('/home');\n  }\n\n  routerlink_api(string) {\n    {\n      this.zone.run(async () => {\n        await this.navCtrl.navigateForward(string);\n      });\n    }\n\n  }\n\n}\n\n"],"sourceRoot":"webpack:///"}