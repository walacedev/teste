{"version":3,"sources":["src/app/pedidos/pedidos.page.html","src/app/pedidos/pedidos.module.ts","src/app/pedidos/pedidos.page.scss","src/app/pedidos/pedidos.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Pedidos</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n  <div *ngIf='admin == false'>\\n    <div *ngIf=\\\"logado == true\\\">\\n      <div *ngIf=\\\"atual_b == false\\\">\\n        <div *ngFor=\\\"let item of menuarray\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <h2>{{ restaurante(item.restaurante) }}</h2>\\n              <ion-card-subtitle>{{ item.horario }}</ion-card-subtitle>\\n              -----------------------\\n              <ion-list *ngFor=\\\"let itens of getjson(item.itens)\\\">\\n                {{ itens.nome }} - R${{ itens.preco }}\\n              </ion-list>\\n              -----------------------\\n              <br>\\n              <ion-item *ngIf=\\\"item.status == 'not_pay'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido em análise</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'preparing'\\\">\\n                <ion-icon name='play' color='warning'></ion-icon>\\n                <ion-label>Preparando pedido</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'quit_sender'\\\">\\n                <ion-icon name='play' color='tertiary'></ion-icon>\\n                <ion-label>Saiu para entrega</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'success'\\\">\\n                <ion-icon name='play' color='success'></ion-icon>\\n                <ion-label>Pedido entregue</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'canceled'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido cancelado</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'estorned'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido cancelado</ion-label>\\n              </ion-item>\\n              <br>\\n              <a (click)='pedido(item.id)'>Detalhes</a>&nbsp;&nbsp;&nbsp;<a\\n                (click)='avaliar(item.status, item.restaurante)'>Avaliar</a>&nbsp;&nbsp;&nbsp;<a\\n                (click)='cancelar()'>Cancelar</a>\\n            </ion-card-header> \\n          </ion-card>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"atual_b == true\\\">\\n        <div *ngFor=\\\"let atualitem of atual\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <a (click)='atual_b = false; atual = []'>Todos os pedidos</a><br><br>\\n              <h2>{{ restaurante(atualitem.restaurante) }}</h2>\\n              <ion-card-subtitle>Pedido #{{ atualitem.id }}00</ion-card-subtitle>\\n              <ion-card-subtitle>Entrega {{ atualitem.tempo_entrega }}</ion-card-subtitle>\\n              <ion-card-subtitle>{{ atualitem.horario }}</ion-card-subtitle>\\n              <ion-list *ngFor=\\\"let itens of getjson(atualitem.itens)\\\">\\n                <br><b>Produto:</b><br>\\n                ({{ itens.quantidade }}x) - {{ itens.nome }} - R${{ itens.preco }}\\n                <br><b>Adicionais:</b><br>\\n                <ion-list *ngFor=\\\"let add of itens.adicionais\\\">\\n                  {{ add.nome }} - R${{ add.preco }}\\n                </ion-list>\\n                ----------------------------------\\n              </ion-list>\\n            </ion-card-header>\\n          </ion-card>\\n\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>Endereço do comprador</ion-card-subtitle>\\n              <ion-list><b>Endereço:</b> {{ atualitem.endereco }}</ion-list>\\n              <ion-list><b>Cidade:</b> {{ atualitem.cep }}</ion-list>\\n              <ion-list><b>Bairro:</b> {{ atualitem.bairro }}</ion-list>\\n              <ion-list><b>Número:</b> {{ atualitem.numero }}</ion-list>\\n              <ion-list><b>Comp:</b> {{ atualitem.complemento }}</ion-list>\\n            </ion-card-header>\\n          </ion-card>\\n\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>Pagamento</ion-card-subtitle>\\n              <ion-list>{{ atualitem.pagamento }}</ion-list>\\n            </ion-card-header>\\n          </ion-card>\\n\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>Status do pedido</ion-card-subtitle>\\n              <ion-item *ngIf=\\\"atualitem.status == 'not_pay'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido em análise</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'preparing'\\\">\\n                <ion-icon name='play' color='warning'></ion-icon>\\n                <ion-label>Preparando pedido</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'quit_sender'\\\">\\n                <ion-icon name='play' color='tertiary'></ion-icon>\\n                <ion-label>Saiu para entrega</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'success'\\\">\\n                <ion-icon name='play' color='success'></ion-icon>\\n                <ion-label>Pedido entregue</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'canceled'\\\">\\n                <ion-label>Pedido cancelado não chegou a cobrar no cartão</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'estorned'\\\">\\n                <ion-label>Pedido cancelado e pagamento devolvido.</ion-label>\\n              </ion-item>\\n            </ion-card-header>\\n          </ion-card>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n\\n\\n  <div *ngIf='admin == true'>\\n    <div *ngIf=\\\"logado == true\\\">\\n      <div *ngIf=\\\"atual_b == false\\\">\\n        <div *ngFor=\\\"let item of menuarray\\\">\\n          <ion-card> \\n            <ion-card-header (click)='pedido(item.id)'>\\n              <h4>Pedido: {{ item.id }}00</h4>\\n              <ion-card-subtitle>{{ item.horario }}</ion-card-subtitle>\\n              -----------------------\\n              <ion-list *ngFor=\\\"let itens of getjson(item.itens)\\\">\\n                {{ itens.nome }} - R${{ itens.preco }}\\n              </ion-list>\\n              ----------------------- \\n              <br>\\n              <ion-item *ngIf=\\\"item.status == 'not_pay'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido em análise</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'preparing'\\\">\\n                <ion-icon name='play' color='warning'></ion-icon>\\n                <ion-label>Preparando pedido</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'quit_sender'\\\">\\n                <ion-icon name='play' color='tertiary'></ion-icon>\\n                <ion-label>Saiu para entrega</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'success'\\\">\\n                <ion-icon name='play' color='success'></ion-icon>\\n                <ion-label>Pedido entregue</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'canceled'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido cancelado</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'estorned'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido cancelado</ion-label>\\n              </ion-item>  \\n            \\n            </ion-card-header>\\n        \\n         <ion-card-content> \\n            <ion-select placeholder=\\\"Altere o status\\\" (ionChange)=\\\"changepedido($event, item.id)\\\">\\n            <ion-select-option value='not_pay'>Pedido em análise</ion-select-option>\\n            <ion-select-option value='preparing'>Preparando pedido</ion-select-option>\\n            <ion-select-option value='quit_sender'>Saiu para entrega</ion-select-option>\\n            <ion-select-option value='success'>Pedido entregue</ion-select-option>\\n            <ion-select-option value='canceled'>Pedido cancelado</ion-select-option>\\n          </ion-select>\\n        </ion-card-content>\\n             \\n            \\n          </ion-card>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"atual_b == true\\\">\\n        <div *ngFor=\\\"let atualitem of atual\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <a (click)='atual_b = false; atual = []'>Todos os pedidos</a><br><br>\\n              <h2>{{ restaurante(atualitem.restaurante) }}</h2>\\n              <ion-card-subtitle>Pedido #{{ atualitem.id }}00</ion-card-subtitle>\\n              <ion-card-subtitle>Entrega {{ atualitem.tempo_entrega }}</ion-card-subtitle>\\n              <ion-card-subtitle>{{ atualitem.horario }}</ion-card-subtitle>\\n              <ion-list *ngFor=\\\"let itens of getjson(atualitem.itens)\\\">\\n                <br><b>Produto:</b><br>\\n                ({{ itens.quantidade }}x) - {{ itens.nome }} - R${{ itens.preco }}\\n                <br><b>Adicionais:</b><br>\\n                <ion-list *ngFor=\\\"let add of itens.adicionais\\\">\\n                  {{ add.nome }} - R${{ add.preco }}\\n                </ion-list>\\n                ----------------------------------\\n              </ion-list>\\n            </ion-card-header>\\n          </ion-card>\\n\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>Endereço do comprador</ion-card-subtitle>\\n              <ion-list><b>Endereço:</b> {{ atualitem.endereco }}</ion-list>\\n              <ion-list><b>Cidade:</b> {{ atualitem.cep }}</ion-list>\\n              <ion-list><b>Bairro:</b> {{ atualitem.bairro }}</ion-list>\\n              <ion-list><b>Número:</b> {{ atualitem.numero }}</ion-list>\\n              <ion-list><b>Comp:</b> {{ atualitem.complemento }}</ion-list>\\n            </ion-card-header>\\n          </ion-card>\\n\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>Pagamento</ion-card-subtitle>\\n              <ion-list>{{ atualitem.pagamento }}</ion-list>\\n            </ion-card-header>\\n          </ion-card>\\n\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>Status do pedido</ion-card-subtitle>\\n              <ion-item *ngIf=\\\"atualitem.status == 'not_pay'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido em análise</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'preparing'\\\">\\n                <ion-icon name='play' color='warning'></ion-icon>\\n                <ion-label>Preparando pedido</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'quit_sender'\\\">\\n                <ion-icon name='play' color='tertiary'></ion-icon>\\n                <ion-label>Saiu para entrega</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'success'\\\">\\n                <ion-icon name='play' color='success'></ion-icon>\\n                <ion-label>Pedido entregue</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'canceled'\\\">\\n                <ion-label>Pedido cancelado não chegou a cobrar no cartão</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'estorned'\\\">\\n                <ion-label>Pedido cancelado e pagamento devolvido.</ion-label>\\n              </ion-item>\\n            </ion-card-header>\\n          </ion-card>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n\\n  <div *ngIf='logado == false'>\\n    <p>Faça o login para acompanhar</p>\\n    <h2>Seus pedidos!</h2>\\n    <ion-button (click)=\\\"routerlink_api('/minha-conta')\\\" color='warning'>Clique para entrar</ion-button>\\n  </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n</ion-content>\\n\\n\\n\\n<ion-toolbar>\\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"bottom\\\">\\n      <ion-tab-button tab=\\\"tab-schedule\\\" (click)=\\\"routerlink_api('/home')\\\">\\n        <ion-icon name=\\\"home\\\"></ion-icon>\\n        <ion-label>Início</ion-label>\\n      </ion-tab-button>\\n\\n      <ion-tab-button tab=\\\"tab-cart\\\" (click)=\\\"routerlink_api('/pedidos')\\\">\\n        <ion-icon name=\\\"cart\\\" color='warning'></ion-icon>\\n        <ion-label>Pedidos</ion-label>\\n      </ion-tab-button>\\n\\n      <ion-tab-button tab=\\\"tab-person\\\" (click)=\\\"routerlink_api('/conta')\\\">\\n        <ion-icon name=\\\"list\\\"></ion-icon>\\n        <ion-label>Mais</ion-label>\\n      </ion-tab-button>\\n    </ion-tab-bar>\\n  </ion-tabs>\\n</ion-toolbar>\\n\\n\\n<style>\\n  ion-card {\\n    --background: white;\\n  }\\n</style>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PedidosPage } from './pedidos.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PedidosPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PedidosPage]\n})\nexport class PedidosPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlZGlkb3MvcGVkaWRvcy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, NgZone, ViewChild } from '@angular/core';\nimport { NgxXml2jsonService } from 'ngx-xml2json';\nimport { AlertController, NavController, Events, LoadingController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { DataService } from '../services/data.service';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { ViewController } from '@ionic/core';\nimport { interval } from 'rxjs';\n\nimport { Config } from \"../config\";\n\n@Component({\n  selector: 'app-pedidos',\n  templateUrl: './pedidos.page.html',\n  styleUrls: ['./pedidos.page.scss'],\n})\n\nexport class PedidosPage implements OnInit {\n  public status = \"\";\n  public menuarray = []\n  public myaccount;\n  public loading;\n  public pedidos = []\n  public restaurantes = []\n  public atual = [];\n  public atual_b = false;\n  public logado\n  public admin = false\n  public tel_cancelamento = new Config().tel_cancelamento\n\n  constructor(\n    private ngxXml2jsonService: NgxXml2jsonService,\n    public alertCtrl: AlertController,\n    private router: Router, private dataService: DataService,\n    private http: HTTP,\n    public navCtrl: NavController,\n    public events: Events,\n    private zone: NgZone,\n    public loadingController: LoadingController\n  ) {\n\n    \n  \n  }\n\n  ngOnInit() {\n\n \n  }\n \n  changepedido($event, id){\n    var status = $event.target.value\n    this.http.get(new Config().local_link_api + '/api/change?id=' + id + \"&status=\" + status, {}, {}).then((data) => {\n      this.menuarray = []\n      this.pedidos = []\n      this.restaurantes = []\n      this.get_pedidos();\n    })\n  }\n\n\n  \n\n\n  cancelar(){\n    window.open('tel:' + this.tel_cancelamento, '_system') \n  }\n\n\n  async carregando() {\n    this.loading = await this.loadingController.create({\n      message: 'Carregando'\n    });\n    await this.loading.present();\n  }\n\n  async ionViewWillEnter() {\n    this.zone.run(() => {\n      this.get_pedidos();\n    });\n\n  }\n\n  get_pedidos(){\n    const data = JSON.parse(localStorage.getItem('cliente_data'));\n    //this.alert_erro('ERRO', 'Falta uma informação', '' + data);\n    if (data == null) {\n      this.logado = false;\n    } else {\n      this.logado = true;\n      this.zone.run(() => {\n        this.carregando();\n        const datauser = JSON.parse(localStorage.getItem('cliente_data'));\n        this.myaccount = datauser\n        if (this.myaccount['de'] == null || this.myaccount['de'] == \"\") {\n          this.admin = false; \n        }else{ \n          this.admin = true\n        }\n    \n        this.http.get(new Config().local_link_api + '/api/restaurante', {}, {}).then((data) => {\n          this.restaurantes = JSON.parse(data.data);\n    \n        })\n        this.http.get(new Config().local_link_api + '/api/pedidos?de=' + this.myaccount['id'], {}, {}).then((data) => {\n          this.menuarray = JSON.parse(data.data);\n          this.loading.dismiss();\n        }).catch((err) => {\n          this.loading.dismiss();\n        });\n        this.pedidos = JSON.parse(localStorage.getItem('carrinho'))\n        \n      });\n    \n  \n    }\n  }\n\n  avaliar(status, id){\n    if (status != \"success\") {\n      this.alert_erro('ERRO', 'Você não pode avaliar agora', 'Apenas quando o pedido for entregue.');\n    }else{\n      this.routerlink_api('/avaliar/' + id);\n    }\n  }\n\n\n  restaurante(id){\n    var nome = \"\"\n    this.restaurantes.forEach(element => {\n      if (element['id'] == id) {\n        nome = element['nome']\n      }\n    });\n    return nome\n  }\n\n\n  pedido(id) {\n    this.atual_b = true;\n    this.menuarray.forEach(e => {\n      if (e['id'] == id) {\n        this.atual.push(e);\n      }\n    });\n  }\n\n  routerlink_api(string) {\n    this.zone.run(async () => {\n      await this.navCtrl.navigateForward(string);\n    });\n  }\n\n\n  getjson(data) {\n    return JSON.parse(data)\n  }\n\n  async alert_erro(header, subheader, message) {\n    const alert = await this.alertCtrl.create({\n      header: header,\n      subHeader: subheader,\n      message: message,\n      buttons: ['OK']\n    });\n    await alert.present();\n }\n\n}\n"],"sourceRoot":"webpack:///","file":"pedidos-pedidos-module-es5.js"}