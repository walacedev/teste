{"version":3,"sources":["./src/app/pedidos/pedidos.page.html","./src/app/pedidos/pedidos.module.ts","./src/app/pedidos/pedidos.page.scss","./src/app/pedidos/pedidos.page.ts"],"names":[],"mappings":"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","file":"pedidos-pedidos-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Pedidos</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n  <div *ngIf='admin == false'>\\n    <div *ngIf=\\\"logado == true\\\">\\n      <div *ngIf=\\\"atual_b == false\\\">\\n        <div *ngFor=\\\"let item of menuarray\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <h2>{{ restaurante(item.restaurante) }}</h2>\\n              <ion-card-subtitle>{{ item.horario }}</ion-card-subtitle>\\n              -----------------------\\n              <ion-list *ngFor=\\\"let itens of getjson(item.itens)\\\">\\n                {{ itens.nome }} - R${{ itens.preco }}\\n              </ion-list>\\n              -----------------------\\n              <br>\\n              <ion-item *ngIf=\\\"item.status == 'not_pay'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido em análise</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'preparing'\\\">\\n                <ion-icon name='play' color='warning'></ion-icon>\\n                <ion-label>Preparando pedido</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'quit_sender'\\\">\\n                <ion-icon name='play' color='tertiary'></ion-icon>\\n                <ion-label>Saiu para entrega</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'success'\\\">\\n                <ion-icon name='play' color='success'></ion-icon>\\n                <ion-label>Pedido entregue</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'canceled'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido cancelado</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'estorned'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido cancelado</ion-label>\\n              </ion-item>\\n              <br>\\n              <a (click)='pedido(item.id)'>Detalhes</a>&nbsp;&nbsp;&nbsp;<a\\n                (click)='avaliar(item.status, item.restaurante)'>Avaliar</a>&nbsp;&nbsp;&nbsp;<a\\n                (click)='cancelar()'>Cancelar</a>\\n            </ion-card-header> \\n          </ion-card>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"atual_b == true\\\">\\n        <div *ngFor=\\\"let atualitem of atual\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <a (click)='atual_b = false; atual = []'>Todos os pedidos</a><br><br>\\n              <h2>{{ restaurante(atualitem.restaurante) }}</h2>\\n              <ion-card-subtitle>Pedido #{{ atualitem.id }}00</ion-card-subtitle>\\n              <ion-card-subtitle>Entrega {{ atualitem.tempo_entrega }}</ion-card-subtitle>\\n              <ion-card-subtitle>{{ atualitem.horario }}</ion-card-subtitle>\\n              <ion-list *ngFor=\\\"let itens of getjson(atualitem.itens)\\\">\\n                <br><b>Produto:</b><br>\\n                ({{ itens.quantidade }}x) - {{ itens.nome }} - R${{ itens.preco }}\\n                <br><b>Adicionais:</b><br>\\n                <ion-list *ngFor=\\\"let add of itens.adicionais\\\">\\n                  {{ add.nome }} - R${{ add.preco }}\\n                </ion-list>\\n                ----------------------------------\\n              </ion-list>\\n            </ion-card-header>\\n          </ion-card>\\n\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>Endereço do comprador</ion-card-subtitle>\\n              <ion-list><b>Endereço:</b> {{ atualitem.endereco }}</ion-list>\\n              <ion-list><b>Cidade:</b> {{ atualitem.cep }}</ion-list>\\n              <ion-list><b>Bairro:</b> {{ atualitem.bairro }}</ion-list>\\n              <ion-list><b>Número:</b> {{ atualitem.numero }}</ion-list>\\n              <ion-list><b>Comp:</b> {{ atualitem.complemento }}</ion-list>\\n            </ion-card-header>\\n          </ion-card>\\n\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>Pagamento</ion-card-subtitle>\\n              <ion-list>{{ atualitem.pagamento }}</ion-list>\\n            </ion-card-header>\\n          </ion-card>\\n\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>Status do pedido</ion-card-subtitle>\\n              <ion-item *ngIf=\\\"atualitem.status == 'not_pay'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido em análise</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'preparing'\\\">\\n                <ion-icon name='play' color='warning'></ion-icon>\\n                <ion-label>Preparando pedido</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'quit_sender'\\\">\\n                <ion-icon name='play' color='tertiary'></ion-icon>\\n                <ion-label>Saiu para entrega</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'success'\\\">\\n                <ion-icon name='play' color='success'></ion-icon>\\n                <ion-label>Pedido entregue</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'canceled'\\\">\\n                <ion-label>Pedido cancelado não chegou a cobrar no cartão</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'estorned'\\\">\\n                <ion-label>Pedido cancelado e pagamento devolvido.</ion-label>\\n              </ion-item>\\n            </ion-card-header>\\n          </ion-card>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n  <!-- ADMINISTRADOR -->\\n\\n\\n  <div *ngIf='admin == true'>\\n    <div *ngIf=\\\"logado == true\\\">\\n      <div *ngIf=\\\"atual_b == false\\\">\\n        <div *ngFor=\\\"let item of menuarray\\\">\\n          <ion-card> \\n            <ion-card-header (click)='pedido(item.id)'>\\n              <h4>Pedido: {{ item.id }}00</h4>\\n              <ion-card-subtitle>{{ item.horario }}</ion-card-subtitle>\\n              -----------------------\\n              <ion-list *ngFor=\\\"let itens of getjson(item.itens)\\\">\\n                {{ itens.nome }} - R${{ itens.preco }}\\n              </ion-list>\\n              ----------------------- \\n              <br>\\n              <ion-item *ngIf=\\\"item.status == 'not_pay'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido em análise</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'preparing'\\\">\\n                <ion-icon name='play' color='warning'></ion-icon>\\n                <ion-label>Preparando pedido</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'quit_sender'\\\">\\n                <ion-icon name='play' color='tertiary'></ion-icon>\\n                <ion-label>Saiu para entrega</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'success'\\\">\\n                <ion-icon name='play' color='success'></ion-icon>\\n                <ion-label>Pedido entregue</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'canceled'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido cancelado</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"item.status == 'estorned'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido cancelado</ion-label>\\n              </ion-item>  \\n            \\n            </ion-card-header>\\n        \\n         <ion-card-content> \\n            <ion-select placeholder=\\\"Altere o status\\\" (ionChange)=\\\"changepedido($event, item.id)\\\">\\n            <ion-select-option value='not_pay'>Pedido em análise</ion-select-option>\\n            <ion-select-option value='preparing'>Preparando pedido</ion-select-option>\\n            <ion-select-option value='quit_sender'>Saiu para entrega</ion-select-option>\\n            <ion-select-option value='success'>Pedido entregue</ion-select-option>\\n            <ion-select-option value='canceled'>Pedido cancelado</ion-select-option>\\n          </ion-select>\\n        </ion-card-content>\\n             \\n            \\n          </ion-card>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"atual_b == true\\\">\\n        <div *ngFor=\\\"let atualitem of atual\\\">\\n          <ion-card>\\n            <ion-card-header>\\n              <a (click)='atual_b = false; atual = []'>Todos os pedidos</a><br><br>\\n              <h2>{{ restaurante(atualitem.restaurante) }}</h2>\\n              <ion-card-subtitle>Pedido #{{ atualitem.id }}00</ion-card-subtitle>\\n              <ion-card-subtitle>Entrega {{ atualitem.tempo_entrega }}</ion-card-subtitle>\\n              <ion-card-subtitle>{{ atualitem.horario }}</ion-card-subtitle>\\n              <ion-list *ngFor=\\\"let itens of getjson(atualitem.itens)\\\">\\n                <br><b>Produto:</b><br>\\n                ({{ itens.quantidade }}x) - {{ itens.nome }} - R${{ itens.preco }}\\n                <br><b>Adicionais:</b><br>\\n                <ion-list *ngFor=\\\"let add of itens.adicionais\\\">\\n                  {{ add.nome }} - R${{ add.preco }}\\n                </ion-list>\\n                ----------------------------------\\n              </ion-list>\\n            </ion-card-header>\\n          </ion-card>\\n\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>Endereço do comprador</ion-card-subtitle>\\n              <ion-list><b>Endereço:</b> {{ atualitem.endereco }}</ion-list>\\n              <ion-list><b>Cidade:</b> {{ atualitem.cep }}</ion-list>\\n              <ion-list><b>Bairro:</b> {{ atualitem.bairro }}</ion-list>\\n              <ion-list><b>Número:</b> {{ atualitem.numero }}</ion-list>\\n              <ion-list><b>Comp:</b> {{ atualitem.complemento }}</ion-list>\\n            </ion-card-header>\\n          </ion-card>\\n\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>Pagamento</ion-card-subtitle>\\n              <ion-list>{{ atualitem.pagamento }}</ion-list>\\n            </ion-card-header>\\n          </ion-card>\\n\\n          <ion-card>\\n            <ion-card-header>\\n              <ion-card-subtitle>Status do pedido</ion-card-subtitle>\\n              <ion-item *ngIf=\\\"atualitem.status == 'not_pay'\\\">\\n                <ion-icon name='play' color='danger'></ion-icon>\\n                <ion-label>Pedido em análise</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'preparing'\\\">\\n                <ion-icon name='play' color='warning'></ion-icon>\\n                <ion-label>Preparando pedido</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'quit_sender'\\\">\\n                <ion-icon name='play' color='tertiary'></ion-icon>\\n                <ion-label>Saiu para entrega</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'success'\\\">\\n                <ion-icon name='play' color='success'></ion-icon>\\n                <ion-label>Pedido entregue</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'canceled'\\\">\\n                <ion-label>Pedido cancelado não chegou a cobrar no cartão</ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"atualitem.status == 'estorned'\\\">\\n                <ion-label>Pedido cancelado e pagamento devolvido.</ion-label>\\n              </ion-item>\\n            </ion-card-header>\\n          </ion-card>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n\\n  <div *ngIf='logado == false'>\\n    <p>Faça o login para acompanhar</p>\\n    <h2>Seus pedidos!</h2>\\n    <ion-button (click)=\\\"routerlink_api('/minha-conta')\\\" color='warning'>Clique para entrar</ion-button>\\n  </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n</ion-content>\\n\\n\\n\\n<ion-toolbar>\\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"bottom\\\">\\n      <ion-tab-button tab=\\\"tab-schedule\\\" (click)=\\\"routerlink_api('/home')\\\">\\n        <ion-icon name=\\\"home\\\"></ion-icon>\\n        <ion-label>Início</ion-label>\\n      </ion-tab-button>\\n\\n      <ion-tab-button tab=\\\"tab-cart\\\" (click)=\\\"routerlink_api('/pedidos')\\\">\\n        <ion-icon name=\\\"cart\\\" color='warning'></ion-icon>\\n        <ion-label>Pedidos</ion-label>\\n      </ion-tab-button>\\n\\n      <ion-tab-button tab=\\\"tab-person\\\" (click)=\\\"routerlink_api('/conta')\\\">\\n        <ion-icon name=\\\"list\\\"></ion-icon>\\n        <ion-label>Mais</ion-label>\\n      </ion-tab-button>\\n    </ion-tab-bar>\\n  </ion-tabs>\\n</ion-toolbar>\\n\\n\\n<style>\\n  ion-card {\\n    --background: white;\\n  }\\n</style>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PedidosPage } from './pedidos.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PedidosPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PedidosPage]\n})\nexport class PedidosPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlZGlkb3MvcGVkaWRvcy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, NgZone, ViewChild } from '@angular/core';\nimport { NgxXml2jsonService } from 'ngx-xml2json';\nimport { AlertController, NavController, Events, LoadingController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { DataService } from '../services/data.service';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { ViewController } from '@ionic/core';\nimport { interval } from 'rxjs';\n\nimport { Config } from \"../config\";\n\n@Component({\n  selector: 'app-pedidos',\n  templateUrl: './pedidos.page.html',\n  styleUrls: ['./pedidos.page.scss'],\n})\n\nexport class PedidosPage implements OnInit {\n  public status = \"\";\n  public menuarray = []\n  public myaccount;\n  public loading;\n  public pedidos = []\n  public restaurantes = []\n  public atual = [];\n  public atual_b = false;\n  public logado\n  public admin = false\n  public tel_cancelamento = new Config().tel_cancelamento\n\n  constructor(\n    private ngxXml2jsonService: NgxXml2jsonService,\n    public alertCtrl: AlertController,\n    private router: Router, private dataService: DataService,\n    private http: HTTP,\n    public navCtrl: NavController,\n    public events: Events,\n    private zone: NgZone,\n    public loadingController: LoadingController\n  ) {\n\n    \n  \n  }\n\n  ngOnInit() {\n\n \n  }\n \n  changepedido($event, id){\n    var status = $event.target.value\n    this.http.get(new Config().local_link_api + '/api/change?id=' + id + \"&status=\" + status, {}, {}).then((data) => {\n      this.menuarray = []\n      this.pedidos = []\n      this.restaurantes = []\n      this.get_pedidos();\n    })\n  }\n\n\n  \n\n\n  cancelar(){\n    window.open('tel:' + this.tel_cancelamento, '_system') \n  }\n\n\n  async carregando() {\n    this.loading = await this.loadingController.create({\n      message: 'Carregando'\n    });\n    await this.loading.present();\n  }\n\n  async ionViewWillEnter() {\n    this.zone.run(() => {\n      this.get_pedidos();\n    });\n\n  }\n\n  get_pedidos(){\n    const data = JSON.parse(localStorage.getItem('cliente_data'));\n    //this.alert_erro('ERRO', 'Falta uma informação', '' + data);\n    if (data == null) {\n      this.logado = false;\n    } else {\n      this.logado = true;\n      this.zone.run(() => {\n        this.carregando();\n        const datauser = JSON.parse(localStorage.getItem('cliente_data'));\n        this.myaccount = datauser\n        if (this.myaccount['de'] == null || this.myaccount['de'] == \"\") {\n          this.admin = false; \n        }else{ \n          this.admin = true\n        }\n    \n        this.http.get(new Config().local_link_api + '/api/restaurante', {}, {}).then((data) => {\n          this.restaurantes = JSON.parse(data.data);\n    \n        })\n        this.http.get(new Config().local_link_api + '/api/pedidos?de=' + this.myaccount['id'], {}, {}).then((data) => {\n          this.menuarray = JSON.parse(data.data);\n          this.loading.dismiss();\n        }).catch((err) => {\n          this.loading.dismiss();\n        });\n        this.pedidos = JSON.parse(localStorage.getItem('carrinho'))\n        \n      });\n    \n  \n    }\n  }\n\n  avaliar(status, id){\n    if (status != \"success\") {\n      this.alert_erro('ERRO', 'Você não pode avaliar agora', 'Apenas quando o pedido for entregue.');\n    }else{\n      this.routerlink_api('/avaliar/' + id);\n    }\n  }\n\n\n  restaurante(id){\n    var nome = \"\"\n    this.restaurantes.forEach(element => {\n      if (element['id'] == id) {\n        nome = element['nome']\n      }\n    });\n    return nome\n  }\n\n\n  pedido(id) {\n    this.atual_b = true;\n    this.menuarray.forEach(e => {\n      if (e['id'] == id) {\n        this.atual.push(e);\n      }\n    });\n  }\n\n  routerlink_api(string) {\n    this.zone.run(async () => {\n      await this.navCtrl.navigateForward(string);\n    });\n  }\n\n\n  getjson(data) {\n    return JSON.parse(data)\n  }\n\n  async alert_erro(header, subheader, message) {\n    const alert = await this.alertCtrl.create({\n      header: header,\n      subHeader: subheader,\n      message: message,\n      buttons: ['OK']\n    });\n    await alert.present();\n }\n\n}\n"],"sourceRoot":"webpack:///"}